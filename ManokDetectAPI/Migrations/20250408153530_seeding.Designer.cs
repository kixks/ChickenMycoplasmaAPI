// <auto-generated />
using ManokDetectAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManokDetectAPI.Migrations
{
    [DbContext(typeof(manokDetectDBContext))]
    [Migration("20250408153530_seeding")]
    partial class seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManokDetectAPI.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "New York",
                            Email = "dummy1@gmail.com",
                            MobileNumber = "1234567890",
                            Name = "dummyFarmer1",
                            Password = "12345",
                            UserType = "Farmer"
                        },
                        new
                        {
                            Id = 2,
                            Address = "San Angeles",
                            Email = "dummy2@gmail.com",
                            MobileNumber = "1234567890",
                            Name = "dummyFarmer2",
                            Password = "123456",
                            UserType = "Farmer"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tagum City",
                            Email = "dummyVet1@gmail.com",
                            MobileNumber = "1234567890",
                            Name = "dummyVet1",
                            Password = "898989",
                            UserType = "Veterinarian"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
